/**
 * Copyright 2024 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

config {
    type: "table",
    schema: constants.RESULTS_DATASET,
    description: "Google Ads data",
    tags: ["all", "google_ads"],
}

with impressions as (
  select
    m._data_date,
    m.campaign_id,
    sum(cast(m.impressions as int64)) as impressions
  from
    ${ref('google_ads_metrics')} m
    where click_type = 'URL_CLICKS'
  group by
    1,
    2
 ),

other_metrics as (
  select
    m._data_date,
    m.campaign_id,
    sum(cast(m.clicks as int64)) as clicks,
    sum(cast(m.cost as int64)) as cost
  from
    ${ref('google_ads_metrics')} m
  group by 
    1,
    2
 )

  select
    impressions._data_date as date,
    'Google Ads' as channel,
    impressions.campaign_id,
      /*case
      when regexp_contains(campaign_name, 'Gen') then 'Performance'
      when regexp_contains(campaign_name, 'Brand') then 'Brand'
    else null end as purpose,*/
    0 as reach,
    impressions.impressions as impressions,
    other_metrics.clicks as clicks,
    other_metrics.cost as cost
  from impressions
  left join other_metrics on impressions.campaign_id = other_metrics.campaign_id and impressions._data_date = other_metrics._data_date