/**
 * Copyright 2024 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

config {
    type: "incremental",
    schema: constants.RESULTS_DATASET,
    description: "All events connected to applications to use in analysis or in looker reports with focus on performance",
    tags: ["all"],
    bigquery: {
      partitionBy: "date"
  }
}

pre_operations {
  declare event_date_checkpoint default (
    ${when(incremental(),
      `select max(date) -3 from ${self()}`,
      `select cast('${constants.START_DATE}' as date format 'yyyymmdd')`)
    }
  )
  ---
  ${when(incremental(),
    `delete from ${self()} where date >= event_date_checkpoint`)
  }
}

select
  date,
  session_id,
  channel_group,
  source_medium,
  product,
  case 
    when product != 'PrivatlÃ¥n' then type
  else null end as type,
  previous_submit_location,
  string_agg(distinct status, ', ') as status,
  case when event_name = 'page_view' and not regexp_contains(page_location, 'ansokan-|ansok-|slutford-signering|min-ekonomi|uppgradera') then session_id else null end as visits,
  case when event_name = 'mortgage_indicator_nav' or event_name = 'calculator_nav' then session_id else null end as used_calculator,
  case when regexp_contains(event_name, 'application_start') or (regexp_contains(event_name, 'application_nav') and event_params.step_text = 'start') then session_id else null end as starts,
  case when regexp_contains(event_name, 'application_subm') then session_id else null end as submits,
  count(distinct case when regexp_contains(event_name, 'application_subm') and (status = 'AdditionalInformationNeeded' or status = 'Approved' or status = 'AwaitingSignature' or status = 'Delivered' or status = 'DeliveryInProgress') then session_id else null end) as submits_approved,
  count(distinct case when regexp_contains(event_name, 'application_subm') and status = 'Review' then session_id else null end) as submits_review,
  count(distinct case when regexp_contains(event_name, 'application_subm') and status = 'Rejected' then session_id else null end) as submits_rejected,
  sum(event_value) as event_value
from
  ${ref('applications')}
where 
  date >= event_date_checkpoint
  --session_id = 'zYGq+5AsAU/Aoy5/DnXD8dRVb91/B9HcujTtZmQutAk=.17262937381726293736'
group by 
  date,
  session_id,
  channel_group,
  source_medium,
  product,
  type,
  previous_submit_location,
  visits,
  used_calculator,
  starts,
  submits