/**
 * Copyright 2024 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

config {
    type: "table",
    schema: constants.RESULTS_DATASET,
    description: "All events with session information (source/medium, landing_page etc) connected to applications to use for analysis or in looker reports",
    tags: ["all"],
}

with applications as (
  select
    session_id,
    event_name,
    event_timestamp,
    event_params.step,
    case
      when regexp_contains(event_name, 'blanco_application') then event_params.co_applicant
      else null end as co_applicant,
    case
      when event_params.step_text = 'start' then 'Start'
      when event_params.step_text = 'Application Start' then 'Start'
      when event_params.step_text = 'submit' then 'Submit'
      when event_params.step_text = 'Application Submit' then 'Submit'
      when event_params.step_text = 'Application Sign' then 'Sign'
      when regexp_contains(event_name, '_submit') then ifnull(event_params.step_text, 'Submit') 
      when regexp_contains(event_name, '_sign') then ifnull(event_params.step_text, 'Sign')
      when regexp_contains(event_name, '_start') then ifnull(event_params.step_text, 'Start')
      when event_name = 'calculator_nav' then event_params.field
      else event_params.step_text end as step_text,
    case
      when regexp_contains(event_name, 'mortgage_application_submit') then event_params.status
      when regexp_contains(event_name, 'savings_account_application_submit|savings_account_child_application_submit|isk_account_application_submit|isk_child_account_application_submit|depot_account_application_submit|depot_child_account_application_submit|debit_card_application_submit|debit_card_child_application_submit|credit_card_application_submit|ica_student_application_submit|increase_card_credit_application_submit|bank_account_application_submit') or (event_name = 'ikk_application' and event_params.step_text = 'signerad ansökan') then event_params.status
      when event_name = 'blanco_application_submit' then event_params.state
      else null end AS status,
    case
       when regexp_contains(event_name, 'transfer|new|commitment|loan_promise|raise|mortgage_indicator') or regexp_contains(page_location, '\\/lana\\/bolan') or regexp_contains(page_location, '\\/lana\\/hemnetkalkyl') or regexp_contains(page_location, '\\/min-ekonomi\\/(pagaende\\-arenden\\/lanelofte|pagaende\\-arenden\\/bolan|mina\\-lan\\/mina\\-bolan)') then "Bolån"
       when regexp_contains(event_name, 'blanco|blanco_loan_protection') or regexp_contains(page_location, '\\/(lana\\/privatlan|lan\\/privatlan)') or regexp_contains(page_location, '\\/lana\\/(blancolan|billan|batlan|energilan|laneskydd|samla\\-lan|hur\\-mycket\\-far\\-jag\\-lana|korkortslan|kokslan|lana\\-till\\-badrum)') or regexp_contains(page_location, '\\/min-ekonomi/(pagaende\\-arenden\\/privatlan|mina\\-lan\\/mina\\-privatlan)') then "Privatlån"
       when regexp_contains(event_name, 'debit_card_application|debit_card_child_application|credit_card_application|ica_student_application|increase_card_credit_application|increase_account_credit_application|bank_account_application|ikk_application') or regexp_contains(page_location, '\\/kort\\-och\\-betala') or regexp_contains(page_location, '\\/lana\\/kontokredit') then "Kort"
       when regexp_contains(event_name, 'savings_account_application|savings_account_child_application|isk_account_application|isk_child_account_application|depot_account_application|depot_child_account_application') or regexp_contains(page_location, '\\/spara') then "Spara"
       end AS product,
    case
       when regexp_contains(event_name, 'transfer') or regexp_contains(page_location, '\\/lana\\/bolan\\/(flytta\\-bolan)') then 'Flytta Bolån'
       when regexp_contains(event_name, 'new') or regexp_contains(page_location, '\\/lana\\/bolan\\/(bolaneansokan)') then 'Nytt Bolån'
       when regexp_contains(event_name, 'commitment|loan_promise') or regexp_contains(page_location, '\\/lana\\/(hemnetkalkyl|bolan\\/lanelofte|bolan\\/hur\\-mycket\\-far\\-jag\\-lana)') or regexp_contains(page_location, '\\/min-ekonomi\\/(pagaende\\-arenden\\/lanelofte)')  then 'Lånelöfte'
       when regexp_contains(event_name, 'raise') or regexp_contains(page_location, '\\/lana\\/bolan\\/(utoka\\-bolan)') then 'Utöka Bolån'
       when regexp_contains(event_name, 'blanco') then event_params.loan_purpose
       when regexp_contains(event_name, 'debit_card_child_application') or regexp_contains(page_location, '\\/kort\\-och\\-betala\\/bankkort\\-barn\\-och\\-ungdom') then 'Bankkort Barn'
       when regexp_contains(event_name, 'debit_card_application') or regexp_contains(page_location, '\\/kort\\-och\\-betala\\/bankkort') then 'Bankkort'
       when regexp_contains(event_name, 'increase_card_credit_application') or regexp_contains(page_location, '\\/kort\\-och\\-betala\\/kreditkort/utoka-din-kortkredit') then 'Utöka Kortkredit'
       when regexp_contains(event_name, 'credit_card_application') or regexp_contains(page_location, '\\/kort\\-och\\-betala\\/kreditkort') then 'Kreditkort'
       when event_name = 'ikk_application' or regexp_contains(page_location, '\\/kort\\-och\\-betala\\/ica\\-kort\\-med\\-betalfunktion') then 'ICA-kort Betala'
       when regexp_contains(event_name, 'ica_student_application') or regexp_contains(page_location, '\\/kort\\-och\\-betala\\/ica\\-student') then 'Stammis Student'
       when regexp_contains(event_name, 'increase_account_credit_application') or regexp_contains(page_location, '\\/lana\\/kontokredit') then 'Kontokredit'
       when regexp_contains(event_name, 'bank_account_application') or regexp_contains(page_location, '\\/kort\\-och\\-betala\\/bankkonto') then 'Bankkonto'
       when regexp_contains(event_name, 'savings_account_application') or regexp_contains(page_location, '\\/spara\\/sparkonto') then 'Sparkonto'
       when regexp_contains(event_name, 'savings_account_child_application') or regexp_contains(page_location, '\\/spara\\/spara\\-till\\-barn') and not regexp_contains(page_location, '\\/vara\\-tips\\/') then 'Sparkonto Barn'
       when regexp_contains(event_name, 'isk_account_application') or regexp_contains(page_location, '\\/spara\\/investeringssparkonto') then 'ISK-konto'
       when regexp_contains(event_name, 'isk_child_account_application') or regexp_contains(page_location, '\\/spara\\/spara\\-till\\-barn') then 'ISK-konto Barn'
       when regexp_contains(event_name, 'depot_account_application') or regexp_contains(page_location, '\\/spara\\/depakonto') then 'Depåkonto'
       when regexp_contains(event_name, 'depot_child_account_application') or regexp_contains(page_location, '\\/spara\\/spara\\-till\\-barn') then 'Depåkonto Barn'
       else null end as type,
    case 
      when regexp_contains(event_name, '_submit') then sum(event_params.value) else null end as event_value,
    page_location,
    previous_page_location,
        IF(regexp_contains(event_name, 'application|blanco_loan_protection_submit'), --För vilka event_name vill vi göra denna koll?
    COALESCE( 
      LAST_VALUE(
        IF(
          event_name = 'page_view' and not regexp_contains(page_location, '/ansok|vara-tips|kundservice|utloggad|prislista|logga-in|forsakra/forsakringserbjudande/|slutford-signering') --Vad är villkoret för att en page_view ska vara föregående? I detta fallet att den inte innehåller ordet "ansok"
        , page_location, null) ignore nulls) 
       OVER (PARTITION BY session_id ORDER BY event_timestamp ASC ROWS BETWEEN UNBOUNDED PRECEDING AND 1 PRECEDING ) -- 
       , '(entrance)' -- Om det inte fanns nån page_view i sessionen som uppfyllde viLlkoret så defaultar vi till (entrance)
    ),
    NULL ) 
    AS previous_submit_location,
    user_params.exp_name_cookie_value as exp_name_cookie_value
  from
    ${ref('event')}
  where 
    regexp_contains(event_name, 'transfer_mortgage_application_|new_mortgage_application_|commitment_mortgage_application_|raise_mortgage_application_|loan_promise_application_')
    or regexp_contains(event_name, 'savings_account_application|savings_account_child_application|isk_account_application|isk_child_account_application|depot_account_application|depot_child_account_application')
    or regexp_contains(event_name, 'debit_card_application|debit_card_child_application|credit_card_application|ica_student_application|increase_card_credit_application|increase_account_credit_application|bank_account_application|ikk_application')
    or regexp_contains(event_name, 'blanco_loan_protection')
    or regexp_contains(event_name, "blanco_autogiro")
    or event_name = 'blanco_application_start'
    or event_name = 'blanco_application_nav'
    or event_name = 'blanco_application_submit'
    or event_name = 'blanco_application_sign_click'
    or event_name = 'blanco_application_signed'
    or event_name = 'page_view'
    or event_name = 'calculator'
    or event_name = 'calculator_nav'
    or event_name = 'mortgage_indicator_nav'
    or event_name = 'mortgage_indicator'
    and environment = 'prod'
  group by
    session_id,
    event_name,
    event_timestamp,
    co_applicant,
    step,
    step_text,
    status,
    type,
    page_location,
    previous_page_location,
    exp_name_cookie_value
),

sessions as (
  select
    session_start_date,
    concat(user_pseudo_id,ga_session_id) as session_id,
    pages_in_session,
    landing_page,
    concat(last_non_direct_traffic_source.source, " / ", last_non_direct_traffic_source.medium) as source_medium,
    last_non_direct_traffic_source.channel_group
  from
    ${ref('session')}
)

select
  session_start_date AS date,
  a.session_id,
  product,
  type,
  co_applicant,
  case 
    when event_name = 'ikk_application' and regexp_contains(step_text, 'signerad ansökan') then 'ikk_application_submit'
    when event_name = 'savings_account_child_application' and regexp_contains(step_text, 'signerad ansökan') then 'savings_account_child_application_submit'
    else event_name end as event_name,
  event_timestamp,
  status,
  sum(event_value) AS event_value,
  case 
    when event_name = 'blanco_application_submit' then 'Submit'
    when event_name = 'debit_card_child_application_submit' then 'Submit'
    when regexp_contains(event_name, '_submit') and step_text = 'Kvittens' then 'Submit'
    when event_name = 'increase_account_credit_application_subm' then 'Submit'
    when step is not null and step_text is not null then concat('Steg ', step, ' - ', step_text) 
    else step_text end as step,
  regexp_extract(page_location, r'[^/]+//[^/]+(/[^?]*)') as page_location,
  regexp_extract(previous_page_location, r'[^/]+//[^/]+(/[^?]*)') as previous_page_location,
  regexp_extract(previous_submit_location, r'[^/]+//[^/]+(/[^?]*)') as previous_submit_location,
  regexp_extract(landing_page, r'[^/]+//[^/]+(/[^?]*)') as landing_page,
  pages_in_session,
  source_medium,
  channel_group,
  exp_name_cookie_value,
  count(distinct a.session_id) as sessions
from
  applications a
join sessions s on a.session_id = s.session_id
  where source_medium != 'tagassistant.google.com / referral'
  --where s.session_id = 'AuR/vAP++YEIHdYzR1wlgDHJx//Wuch7hKb7+B3w6fQ=.17023182411702318240'
group by  
  date,
  session_id,
  product,
  type,
  co_applicant,
  event_name,
  event_timestamp,
  status,
  step,
  page_location,
  previous_page_location,
  previous_submit_location,
  landing_page,
  pages_in_session,
  source_medium,
  channel_group,
  exp_name_cookie_value