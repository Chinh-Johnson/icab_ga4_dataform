/**
* Copyright 2024 Google LLC
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*      http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "as IS" BasIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

config {
  type: "table",
  schema: constants.OUTPUT_DATASET,
  description: "Events model, outputs one row per event, in addition to event attribution fields.",
  tags: ["all"],
  bigquery: {
      partitionBy: "event_date"
  }
}

with int_event as (
  select
    *
  from
    ${ref('int_event')}
  order by
    user_key,
    event_timestamp desc
), 

final as (
  select
    a.*,
    if(coalesce(nullif(a.collected_traffic_source.source, '(direct)'), nullif(a.collected_traffic_source.medium, '(none)'), nullif(a.collected_traffic_source.campaign, '(direct)')) is null,
    (
    select
      array_agg(b.collected_traffic_source)
    from
      int_event as b
    where
      b.user_key = a.user_key
      and cast(b.event_timestamp / 1000000 as int64) >= (cast(a.event_timestamp / 1000000 as int64) -
        case
          when a.event_name in ('first_visit', 'first_open') then ${constants.AQUISITION_EVENTS_LOOKBACK_WINDOW}
        else
        ${constants.ALL_EVENTS_LOOKBACK_WINDOW}
      end
        )
      and cast(b.event_timestamp / 1000000 as int64) <= cast(a.event_timestamp / 1000000 as int64)
      and coalesce(nullif(b.collected_traffic_source.source, '(direct)'), nullif(b.collected_traffic_source.medium, '(none)'), nullif(b.collected_traffic_source.campaign, '(direct)')) is not null)[safe_offset(0)],
      a.collected_traffic_source
    ) as last_non_direct_traffic_source,
    if(event_name = 'page_view', coalesce(last_value(if(event_name = 'page_view', page_location, null) ignore nulls ) over (partition by a.session_id order by event_timestamp ASC ROWS BETWEEN UNBOUNDED PRECEDING AND 1 PRECEDING), '(entrance)' ), null ) as previous_page_location,
    if(event_name = 'page_view', coalesce(first_value(if(event_name = 'page_view' and not regexp_contains(page_location, 'logga-in|utloggad'), --Vad är villkoret för att en page_view ska vara föregående? I detta fallet att den inte innehåller ordet "ansok"
    page_location, null) ignore nulls) over (partition by a.session_id order by event_timestamp ASC ROWS BETWEEN 1 FOLLOWING AND UNBOUNDED FOLLOWING ), '(exit)' ), null ) as next_page_location,
    if(regexp_contains(event_name, '_subm'), --För vilka event_name vill vi göra denna koll?
    coalesce(last_value(if(event_name = 'page_view' and not regexp_contains(page_location, '/ansok|vara-tips|kundservice|utloggad|prislista|logga-in|forsakra/forsakringserbjudande/|slutford-signering'), page_location, null) ignore nulls) 
       over (partition by session_id order by event_timestamp ASC ROWS BETWEEN UNBOUNDED PRECEDING AND 1 PRECEDING ), '(entrance)'), null) as previous_submit_location,
  from
    int_event as a
)
  
select
  * except(last_non_direct_traffic_source),
  (select as struct
    ifnull(last_non_direct_traffic_source.source, '(direct)') as source,
    ifnull(last_non_direct_traffic_source.medium, '(none)') as medium,
    ifnull(last_non_direct_traffic_source.campaign, '(direct)') as campaign
  ) as last_non_direct_traffic_source
from
  final